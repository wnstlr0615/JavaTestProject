2.	JUnit 5: 시작하기

●	@Test
●	@BeforeAll / @AfterAll  // 전체 테스트 시작 전 , 시작 후 ( 한번씩 실행)
●	@BeforeEach / @AfterEach  //모든 테스트 시작 전 후 (각각 실행)
●	@Disabled // 테스트 제외

====================================================
3.	JUnit 5: 테스트 이름 표시하기

@DisplayNameGeneration
●	Method와 Class 레퍼런스를 사용해서 테스트 이름을 표기하는 방법 설정.
●	기본 구현체로 ReplaceUnderscores 제공

@DisplayName
●	어떤 테스트인지 테스트 이름을 보다 쉽게 표현할 수 있는 방법을 제공하는 애노테이션.
●	@DisplayNameGeneration 보다 우선 순위가 높다.
====================================================
4.	JUnit 5: Assertion

실제 값이 기대한 값과 같은지 확인	    assertEquals(expected, actual)
값이 null이 아닌지 확인	            assertNotNull(actual)
다음 조건이 참(true)인지 확인	        assertTrue(boolean)
모든 확인 구문 확인	                assertAll(executables...)
예외 발생 확인	                    assertThrows(expectedType, executable)
특정 시간 안에 실행이 완료되는지 확인	assertTimeout(duration, executable)
====================================================
5.	JUnit 5: 조건에 따라 테스트 실행하기 ( 실습 생략함 강의 참조)
특정한 조건을 만족하는 경우에 테스트를 실행하는 방법.

org.junit.jupiter.api.Assumptions.*
●	assumeTrue(조건)
●	assumingThat(조건, 테스트)

@Enabled___ 와 @Disabled___
●	OnOS
●	OnJre
●	IfSystemProperty
●	IfEnvironmentVariable
●	If

특정 조건이 만족할 때 테스트 실행하기
====================================================
7.	JUnit 5: 커스텀 태그
기존 어노테이션들을 새로운 커스텀 어노테이션으로 지정하여 간단하게 표시할 수 있다.

@Test
@Tag("fast")

▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
@FastTest

-----------------------------------
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.METHOD)
@Tag("fast")
@Test
@interface Fast{}
-------------------------------------
====================================================



